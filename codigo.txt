// cadete.cs
using System;

namespace EspacioCadeteria
{
    public class Cadete
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Direccion { get; set; }
        public string Telefono { get; set; }

        public Cadete(int id, string nombre, string direccion, string telefono)
        {
            Id = id;
            Nombre = nombre;
            Direccion = direccion;
            Telefono = telefono;
        }

        // Métodos y propiedades específicas de Cadete
    }
}

// pedido.cs
using System;

namespace EspacioCadeteria
{
    public class Pedido
    {
        public int Numero { get; set; }
        public string Observacion { get; set; }
        public Cliente Cliente { get; set; }
        public string Estado { get; set; }
        public Cadete CadeteAsignado { get; set; } // Referencia al cadete asignado

        public Pedido(int numero, string observacion, Cliente cliente, string estado)
        {
            Numero = numero;
            Observacion = observacion;
            Cliente = cliente;
            Estado = estado;
        }

        // Métodos y propiedades específicas de Pedido
    }
}

// cadeteria.cs
using System;
using System.Collections.Generic;

namespace EspacioCadeteria
{
    public class Cadeteria
    {
        public string Nombre { get; set; }
        public string Telefono { get; set; }
        public List<Cadete> ListadoCadetes { get; set; }
        public List<Pedido> ListadoPedidos { get; set; } // Lista de todos los pedidos

        public Cadeteria(string nombre, string telefono)
        {
            Nombre = nombre;
            Telefono = telefono;
            ListadoCadetes = new List<Cadete>();
            ListadoPedidos = new List<Pedido>();
        }

        // Métodos y propiedades específicas de Cadeteria

        public decimal JornalACobrar(int cadeteId)
        {
            // Buscar ID
            Cadete cadete = ListadoCadetes.FirstOrDefault(c => c.Id == cadeteId);

            if (cadete != null)
            {
                // Calcular jornal basado en la cantidad de pedidos del cadete
                decimal jornalBase = 500;
                int cantidadPedidos = ListadoPedidos.Count(p => p.CadeteAsignado != null && p.CadeteAsignado.Id == cadeteId);
                decimal jornalCadete = jornalBase * cantidadPedidos;
                return jornalCadete;
            }
            else
            {
                throw new InvalidOperationException("Cadete no encontrado.");
            }
        }

        // Otros métodos para operaciones de la Cadeteria
    }
}
