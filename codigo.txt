using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace EspacioCadeteria
{
    class Cadeteria
    {
        private string nombre;
        private string telefono;
        private List<Cadete> listadoCadetes = new List<Cadete>();
        private List<Pedido> listadoPedidos = new List<Pedido>(); // Agregar la lista de pedidos

        public string Nombre { get => nombre; set => nombre = value; }
        public string Telefono { get => telefono; set => telefono = value; }
        public List<Cadete> ListadoCadetes { get => listadoCadetes; set => listadoCadetes = value; }
        public List<Pedido> ListadoPedidos { get => listadoPedidos; } // Propiedad solo de lectura para la lista de pedidos

        public Cadeteria(string nombre, string telefono)
        {
            this.Nombre = nombre;
            this.Telefono = telefono;
        }

        public void AgregarCadete(Cadete cadete)
        {
            ListadoCadetes.Add(cadete);
        }

        public void EliminarCadete(Cadete cadete)
        {
            ListadoCadetes.Remove(cadete);
        }

        // Método para calcular el jornal a cobrar por un cadete específico
        public decimal JornalACobrar(int idCadete)
        {
            Cadete cadete = ListadoCadetes.FirstOrDefault(c => c.Id == idCadete);
            if (cadete != null)
            {
                return cadete.JornalACobrar();
            }
            return 0; // Si no se encuentra el cadete, el jornal es 0
        }

        // Método para asignar un cadete a un pedido específico
        public void AsignarCadeteAPedido(int idCadete, int idPedido)
        {
            Cadete cadete = ListadoCadetes.FirstOrDefault(c => c.Id == idCadete);
            Pedido pedido = ListadoPedidos.FirstOrDefault(p => p.Numero == idPedido);

            if (cadete != null && pedido != null)
            {
                pedido.Cadete = cadete;
                cadete.AgregarPedido(pedido);
            }
        }
    }
}
